<Window x:Class="NotationalFerocity.Windows.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:extToolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit/extended"
        xmlns:Windows="clr-namespace:NotationalFerocity.Windows" 
        xmlns:WPF="clr-namespace:NotationalFerocity.WPF"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Windows:SettingsWindow}"
        Title="Settings"
        MinWidth="420"
        MinHeight="360"
        Height="360"
        Width="420"
        Background="{x:Static SystemColors.ControlBrush}"
        Loaded="Window_Loaded"
        SourceInitialized="Window_SourceInitialized">
    <Window.Resources>
        <Style TargetType="{x:Type TextBox}"
               BasedOn="{StaticResource {x:Type TextBox}}">
            <!--
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="true">
                    <Setter Property="BorderBrush" Value="Blue" />
                    <Setter Property="BorderThickness" Value="2" />
                </Trigger>
            </Style.Triggers>
            -->

            <!--
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border Name="Border"
                            CornerRadius="2"
                            Padding="0"
                            BorderThickness="1">
                            
                            <Border.Background>
                                <SolidColorBrush Color="White" />
                            </Border.Background>

                            <Border.BorderBrush>
                                <SolidColorBrush Color="Black" />
                            </Border.BorderBrush>

                            <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            -->

            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <Border BorderBrush="OrangeRed" BorderThickness="1" CornerRadius="2">
                            <AdornedElementPlaceholder />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="126" />
            <ColumnDefinition Width="287*" />
        </Grid.ColumnDefinitions>

        <WPF:ClickLabel Target="{Binding ElementName=notesDirectoryTextBox}" Content="Notes Directory" Height="28" HorizontalAlignment="Left" Margin="12,12,0,0" x:Name="notesDirectoryLabel" VerticalAlignment="Top" />
        <WPF:ClickLabel Target="{Binding ElementName=extensionsTextBox}" Content="Extensions" Height="28" HorizontalAlignment="Left" Margin="12,46,0,0" x:Name="extensionsLabel" VerticalAlignment="Top" Width="93" />
        <WPF:ClickLabel Target="{Binding ElementName=backgroundColorPicker}" Content="Background Color" Height="28" HorizontalAlignment="Left" Margin="12,80,0,0" x:Name="label1" VerticalAlignment="Top" Width="114" />
        <WPF:ClickLabel Target="{Binding ElementName=foregroundColorPicker}" Content="Foreground Color" Height="28" HorizontalAlignment="Left" Margin="12,114,0,0" x:Name="label2" VerticalAlignment="Top" Width="114" />
        <WPF:ClickLabel Target="{Binding ElementName=proportionalFontTextBox}" Content="Proportional Font" Height="28" HorizontalAlignment="Left" Margin="12,148,0,0" x:Name="label3" VerticalAlignment="Top" Width="108" />
        <WPF:ClickLabel Target="{Binding ElementName=monospacedFontTextBox}" Content="Monospaced Font" Height="28" HorizontalAlignment="Left" Margin="12,182,0,0" x:Name="label4" VerticalAlignment="Top" Width="108" />
        <WPF:ClickLabel Target="{Binding ElementName=markdownFontTextBox}" Content="Markdown Font" Height="28" HorizontalAlignment="Left" Margin="12,216,0,0" x:Name="markdownFontLabel" VerticalAlignment="Top" Width="108" />
        <WPF:ClickLabel Target="{Binding ElementName=displayFontTextBox}" Content="Display Font" Height="28" HorizontalAlignment="Left" Margin="12,250,0,0" x:Name="displayFontLabel" VerticalAlignment="Top" Width="108" />

        <TextBox Height="23" Margin="0,14,80,0" Name="notesDirectoryTextBox" VerticalAlignment="Top" Grid.Column="1">
            <TextBox.Text>
                <Binding Path="NotesDirectory" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True">
                    <Binding.ValidationRules>
                        <ExceptionValidationRule ValidatesOnTargetUpdated="True" />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <Button Content="_Browse..." Grid.Column="1" Height="23" HorizontalAlignment="Right" Margin="0,14,12,0" Name="browseButton" VerticalAlignment="Top" Width="62" Click="browseButton_Click" />

        <TextBox Height="23" Margin="0,48,12,0" Name="extensionsTextBox" VerticalAlignment="Top" Grid.Column="1">
            <TextBox.Text>
                <Binding Path="Extensions" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True">
                    <Binding.ValidationRules>
                        <ExceptionValidationRule ValidatesOnTargetUpdated="True" />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <extToolkit:ColorPicker HorizontalAlignment="Left" Margin="0,81,0,0" Name="backgroundColorPicker" VerticalAlignment="Top" Grid.Column="1" AllowDrop="False" DisplayColorAndName="True" Width="111" Height="24" SelectedColor="White" />
        <extToolkit:ColorPicker AllowDrop="False" DisplayColorAndName="True" Height="24" HorizontalAlignment="Left" Margin="0,115,0,0" Name="foregroundColorPicker" VerticalAlignment="Top" Width="111" Grid.Column="1" />

        <TextBox Grid.Column="1" Height="23" Margin="0,150,41,0" Name="proportionalFontTextBox" VerticalAlignment="Top" />
        <Button Content="..." Height="23" HorizontalAlignment="Right" Margin="0,150,12,0" Name="proportionalFontButton" VerticalAlignment="Top" Width="23" Grid.Column="1" Click="proportionalFontButton_Click" />
        <TextBox Height="23" Margin="0,184,41,0" Name="monospacedFontTextBox" VerticalAlignment="Top" Grid.Column="1" />
        <Button Content="..." Height="23" HorizontalAlignment="Right" Margin="0,184,12,0" Name="monospaceFontButton" VerticalAlignment="Top" Width="23" Grid.Column="1" Click="monospaceFontButton_Click" />
        <TextBox Height="23" Margin="0,218,41,0" Name="markdownFontTextBox" VerticalAlignment="Top" Grid.Column="1" />
        <Button Content="..." Height="23" HorizontalAlignment="Right" Margin="0,218,12,0" Name="markdownFontButton" VerticalAlignment="Top" Width="23" Grid.Column="1" Click="markdownFontButton_Click" />
        <TextBox Height="23" Margin="0,252,41,0" Name="displayFontTextBox" VerticalAlignment="Top" Grid.Column="1" />
        <Button Content="..." Height="23" HorizontalAlignment="Right" Margin="0,252,12,0" Name="displayFontButton" VerticalAlignment="Top" Width="23" Grid.Column="1" Click="displayFontButton_Click" />

        <Button Content="_Cancel" Grid.Column="1" Margin="0,0,93,12" Name="cancelButton" HorizontalAlignment="Right" Width="75" Height="23" VerticalAlignment="Bottom" IsCancel="True" Click="cancelButton_Click" />

        <Button Content="_OK" Grid.Column="1" HorizontalAlignment="Right" Margin="0,0,12,12" Name="okButton" Width="75" Height="23" VerticalAlignment="Bottom" IsDefault="True" Click="okButton_Click">
            <Button.Style>
                <Style TargetType="{x:Type Button}"
                       BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="IsEnabled" Value="false" />
                    <Style.Triggers>
                        <!-- Require the controls to be valid in order to press OK -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=notesDirectoryTextBox, Path=(Validation.HasError)}" Value="false" />
                                <Condition Binding="{Binding ElementName=extensionsTextBox, Path=(Validation.HasError)}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="true" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</Window>