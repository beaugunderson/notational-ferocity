//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NotationalFerocity.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0")]
    public sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<ArrayOfString xmlns:xsi=\"http://www.w3." +
            "org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <s" +
            "tring>.txt</string>\r\n  <string>.sql</string>\r\n</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection Extensions {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["Extensions"]));
            }
            set {
                this["Extensions"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("C:\\Notes")]
        public string NotesDirectory {
            get {
                return ((string)(this["NotesDirectory"]));
            }
            set {
                this["NotesDirectory"] = value;
            }
        }
        
        /// <summary>
        /// The background color.
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("The background color.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("#FFFFFFFF")]
        public global::System.Windows.Media.SolidColorBrush ColorBackground {
            get {
                return ((global::System.Windows.Media.SolidColorBrush)(this["ColorBackground"]));
            }
            set {
                this["ColorBackground"] = value;
            }
        }
        
        /// <summary>
        /// The foreground color.
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("The foreground color.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("#FF000000")]
        public global::System.Windows.Media.SolidColorBrush ColorForeground {
            get {
                return ((global::System.Windows.Media.SolidColorBrush)(this["ColorForeground"]));
            }
            set {
                this["ColorForeground"] = value;
            }
        }
        
        /// <summary>
        /// The font used to display notes viewed with a proportional font.
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("The font used to display notes viewed with a proportional font.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?><Font xmlns:xsi=\"http://www.w3.org/2001/XM" +
            "LSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" FontFamily=\"Segoe" +
            " UI\" FontStyle=\"Normal\" FontWeight=\"Normal\" FontStretch=\"Normal\" FontSize=\"12\" /" +
            ">")]
        public global::NotationalFerocity.WPF.SettingsFontDefinition FontProportional {
            get {
                return ((global::NotationalFerocity.WPF.SettingsFontDefinition)(this["FontProportional"]));
            }
            set {
                this["FontProportional"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?><Font xmlns:xsi=\"http://www.w3.org/2001/XM" +
            "LSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" FontFamily=\"Segoe" +
            " UI\" FontStyle=\"Normal\" FontWeight=\"Normal\" FontStretch=\"Normal\" FontSize=\"12\" /" +
            ">")]
        public global::NotationalFerocity.WPF.SettingsFontDefinition FontMonospaced {
            get {
                return ((global::NotationalFerocity.WPF.SettingsFontDefinition)(this["FontMonospaced"]));
            }
            set {
                this["FontMonospaced"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?><Font xmlns:xsi=\"http://www.w3.org/2001/XM" +
            "LSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" FontFamily=\"Segoe" +
            " UI\" FontStyle=\"Normal\" FontWeight=\"Normal\" FontStretch=\"Normal\" FontSize=\"12\" /" +
            ">")]
        public global::NotationalFerocity.WPF.SettingsFontDefinition FontDisplay {
            get {
                return ((global::NotationalFerocity.WPF.SettingsFontDefinition)(this["FontDisplay"]));
            }
            set {
                this["FontDisplay"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?><Font xmlns:xsi=\"http://www.w3.org/2001/XM" +
            "LSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" FontFamily=\"Segoe" +
            " UI\" FontStyle=\"Normal\" FontWeight=\"Normal\" FontStretch=\"Normal\" FontSize=\"12\" /" +
            ">")]
        public global::NotationalFerocity.WPF.SettingsFontDefinition FontMarkdown {
            get {
                return ((global::NotationalFerocity.WPF.SettingsFontDefinition)(this["FontMarkdown"]));
            }
            set {
                this["FontMarkdown"] = value;
            }
        }
    }
}
