<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
  <Color x:Key="BlackColor">#FF000000</Color>
  <Color x:Key="WhiteColor">#FFFFFFFF</Color>
  <Color x:Key="ScrollBarButtonBorderColor">#FFB6BABF</Color>
  <SolidColorBrush x:Key="WhiteBrush" Color="{DynamicResource WhiteColor}"/>
  <LinearGradientBrush x:Key="NormalBrush" EndPoint="0.5,0.974" StartPoint="0.5,0.031">
    <GradientStop Color="White" Offset="0"/>
    <GradientStop Color="#FFF8F8F9" Offset="1"/>
    <GradientStop Color="#FFF8F8F9" Offset="0.332"/>
    <GradientStop Color="#FFF1F2F4" Offset="0.341"/>
    <GradientStop Color="#FFF1F2F4" Offset="0.349"/>
    <GradientStop Color="#FFE8EAEC" Offset="0.358"/>
    <GradientStop Color="#FFF3F4F5" Offset="0.75"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="NormalBorderBrush" Color="#FF828790"/>
  <SolidColorBrush x:Key="MouseOverBorderBrush" Color="#FFCBAB52"/>
  <LinearGradientBrush x:Key="MouseOverBrush" EndPoint="0.5,0.974" StartPoint="0.5,0.031">
    <GradientStop Color="#FFFFFDE1" Offset="0"/>
    <GradientStop Color="#FFFFE7A0" Offset="1"/>
    <GradientStop Color="#FFFFE8A5" Offset="0.332"/>
    <GradientStop Color="#FFFFE18B" Offset="0.341"/>
    <GradientStop Color="#FFFFE18B" Offset="0.349"/>
    <GradientStop Color="#FFFFD768" Offset="0.358"/>
    <GradientStop Color="#FFFFE394" Offset="0.75"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="PressedBrush" EndPoint="0.5,0.974" StartPoint="0.5,0.031">
    <GradientStop Color="#FFFFBC67" Offset="0"/>
    <GradientStop Color="#FFFFD6A3" Offset="1"/>
    <GradientStop Color="#FFFFAB41" Offset="0.332"/>
    <GradientStop Color="#FFFD9E3F" Offset="0.341"/>
    <GradientStop Color="#FFFD9E3F" Offset="0.349"/>
    <GradientStop Color="#FFFB9143" Offset="0.358"/>
    <GradientStop Color="#FFFECB95" Offset="0.75"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="PressedBorderBrush" Color="#FFB29648"/>
  <LinearGradientBrush x:Key="LightBrush" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFF" Offset="0.0"/>
    <GradientStop Color="#EEE" Offset="1.0"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD"/>
  <LinearGradientBrush x:Key="ListItemHoverBrush" EndPoint="0.5,0.907" StartPoint="0.5,0.103">
    <GradientStop Color="#FFFDEEB3" Offset="0"/>
    <GradientStop Color="#FFFDFAE0" Offset="1"/>
    <GradientStop Color="#FFFDE38A" Offset="0.306"/>
    <GradientStop Color="#FFFDEAA1" Offset="0.707"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="FocusedBrush" EndPoint="0.5,0.974" StartPoint="0.5,0.031">
    <GradientStop Color="#FFE6E8EB" Offset="0"/>
    <GradientStop Color="#FFDCDFE3" Offset="1"/>
    <GradientStop Color="#FFDDE0E3" Offset="0.332"/>
    <GradientStop Color="#FFD4D7DB" Offset="0.341"/>
    <GradientStop Color="#FFD4D7DB" Offset="0.349"/>
    <GradientStop Color="#FFC7CBD1" Offset="0.358"/>
    <GradientStop Color="#FFD7DBDE" Offset="0.75"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="SelectedListItemBorderBrush" EndPoint="0.5,0.932" StartPoint="0.5,0.083">
    <GradientStop Color="#FFC2762B" Offset="0"/>
    <GradientStop Color="#FFC29E47" Offset="1"/>
    <GradientStop Color="#FFC28838" Offset="0.478"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ListItemSelectedBackgroundBrush" EndPoint="0.5,0.902" StartPoint="0.5,0.134">
    <GradientStop Color="#FFFFE575" Offset="0"/>
    <GradientStop Color="#FFFEE287" Offset="1"/>
    <GradientStop Color="#FFFFE48A" Offset="0.086"/>
    <GradientStop Color="#FFFFE48A" Offset="0.435"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ListItemSelectedInsiderBorderBrush" Color="#FFF8D172"/>
  <LinearGradientBrush x:Key="ScrollBarButtonBrush" EndPoint="0.971,0.51" StartPoint="0.016,0.51">
    <GradientStop Color="#FFF2F3F3" Offset="0"/>
    <GradientStop Color="#FFF1F1F1" Offset="0.668"/>
    <GradientStop Color="#FFE6E7E8" Offset="1"/>
    <GradientStop Color="#FFE7E8E9" Offset="0.677"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ScrollBarButtonBorderBrush" Color="{DynamicResource ScrollBarButtonBorderColor}"/>
  <LinearGradientBrush x:Key="ScrollBarButtonHoverBrush" EndPoint="0.971,0.51" StartPoint="0.016,0.51">
    <GradientStop Color="White" Offset="0"/>
    <GradientStop Color="#FFFBFBFB" Offset="0.668"/>
    <GradientStop Color="#FFF8F8F9" Offset="1"/>
    <GradientStop Color="#FFF5F6F7" Offset="0.677"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ScrollBarPressedBrush" Color="#FFE1E2E3"/>
  <SolidColorBrush x:Key="TextBoxBorderBrush" Color="#FFD4D6D9"/>
  <SolidColorBrush x:Key="TextBoxBorderHoverBrush" Color="#FFBBBFC4"/>
  <LinearGradientBrush x:Key="ComboBoxToggleBg" EndPoint="0.5,0.974" StartPoint="0.5,0.031">
    <GradientStop Color="#FFFEFEFE" Offset="0"/>
    <GradientStop Color="#FFF4F6F7" Offset="1"/>
    <GradientStop Color="#FFF8F8FA" Offset="0.75"/>
    <GradientStop Color="#FFFBFBFC" Offset="0.194"/>
    <GradientStop Color="#FFFBFBFB" Offset="0.478"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888"/>
  <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE"/>
  <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA"/>
  <LinearGradientBrush x:Key="WindowBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFE4E4E5" Offset="0"/>
    <GradientStop Color="#FFEBEEF1" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="DefaultedBorderBrush" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#777" Offset="0.0"/>
    <GradientStop Color="#000" Offset="1.0"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="SolidBorderBrush" Color="#888"/>
  <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA"/>
  <SolidColorBrush x:Key="LightColorBrush" Color="#DDD"/>
  <SolidColorBrush x:Key="TextBrush" Color="{DynamicResource BlackColor}"/>
  <SolidColorBrush x:Key="GlyphBrush" Color="#444"/>
  <Style x:Key="DropShadowGrid" TargetType="{x:Type Grid}">
    <Setter Property="Effect">
      <Setter.Value>
        <DropShadowEffect Direction="0" ShadowDepth="1" BlurRadius="10" Opacity="0.1"/>
      </Setter.Value>
    </Setter>
    <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
  </Style>
  <Style x:Key="DropShadowBorder" TargetType="{x:Type Border}">
    <Setter Property="Effect">
      <Setter.Value>
        <DropShadowEffect Direction="0" ShadowDepth="1" BlurRadius="10" Opacity="0.1"/>
      </Setter.Value>
    </Setter>
    <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
    <Setter Property="BorderBrush" Value="#FFDADADA"/>
  </Style>
  <Style x:Key="NuclearButtonFocusVisual" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle Margin="2" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}" BasedOn="{x:Null}">
    <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}"/>
    <Setter Property="Template" Value="{DynamicResource NuclearButton}"/>
    <Setter Property="Background" Value="{DynamicResource NormalBrushExtSimple}"/>
    <Setter Property="BorderBrush" Value="#FFBBBFC4"/>
    <Setter Property="BorderThickness" Value="1"/>
  </Style>
  <ControlTemplate x:Key="NuclearButton" TargetType="{x:Type Button}">
    <ControlTemplate.Resources>
      <ResourceDictionary>
        <Storyboard x:Key="HoverOn">
          <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HoverOff">
          <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="PressedOn">
          <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="PressedOff">
          <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
          </DoubleAnimationUsingKeyFrames>
        </Storyboard>
      </ResourceDictionary>
    </ControlTemplate.Resources>
    <Grid x:Name="Grid">
      <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CornerRadius="3">
        <Border.Background>
          <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFF7FAFC" Offset="0"/>
            <GradientStop Color="#FFE7EAEE" Offset="1"/>
            <GradientStop Color="#FFF5F7FA" Offset="0.332"/>
            <GradientStop Color="#FFECEFF2" Offset="0.741"/>
            <GradientStop Color="#FFE8EBEF" Offset="0.875"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Border x:Name="HoverBorder" BorderThickness="1" BorderBrush="{DynamicResource MouseOverBorderBrush}" CornerRadius="3" Opacity="0">
        <Border BorderThickness="1" CornerRadius="2" Background="{DynamicResource ListItemHoverBrush}">
          <Border.BorderBrush>
            <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
          </Border.BorderBrush>
        </Border>
      </Border>
      <Border x:Name="PressedBorder" BorderThickness="1" CornerRadius="3" Opacity="0" BorderBrush="{DynamicResource PressedBorderBrush3}">
        <Border BorderThickness="1" CornerRadius="2" BorderBrush="{DynamicResource PressedBorderBrushInner3}" Background="{DynamicResource PressedBrush3}"/>
      </Border>
      <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsDefault" Value="True">
        <Setter TargetName="Border" Value="{DynamicResource MouseOverBorderBrush}" Property="BorderBrush"/>
      </Trigger>
      <Trigger Property="IsKeyboardFocused" Value="True"/>
      <Trigger Property="IsMouseOver" Value="True">
        <Trigger.ExitActions>
          <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
        </Trigger.EnterActions>
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Trigger.ExitActions>
          <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}"/>
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}"/>
        </Trigger.EnterActions>
      </Trigger>
      <Trigger Property="IsEnabled" Value="True"/>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" Property="Background"/>
        <Setter Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" Property="BorderBrush"/>
        <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Foreground"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type ListView}" TargetType="{x:Type ListView}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Background" Value="{DynamicResource WhiteBrush}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource SolidBorderBrush}"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <Grid>
            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
            <ScrollViewer Margin="1" Focusable="False" Background="{TemplateBinding Background}">
              <StackPanel Margin="2" IsItemsHost="True"/>
            </ScrollViewer>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" Property="Background"/>
              <Setter Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" Property="BorderBrush"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="True">
              <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ListViewItem}" TargetType="{x:Type ListViewItem}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="OverridesDefaultStyle" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Grid SnapsToDevicePixels="True" Margin="0">
            <Border x:Name="SelectedBorder" Opacity="0" BorderThickness="1" CornerRadius="2" BorderBrush="{DynamicResource SelectedListItemBorderBrush}">
              <Border BorderBrush="{DynamicResource ListItemSelectedInsiderBorderBrush}" BorderThickness="1" CornerRadius="1" Background="{DynamicResource ListItemSelectedBackgroundBrush}"/>
            </Border>
            <Border x:Name="HoverBorder" BorderThickness="1" BorderBrush="{DynamicResource MouseOverBorderBrush}" CornerRadius="3" Opacity="0">
              <Border BorderThickness="1" CornerRadius="2" Background="{DynamicResource ListItemHoverBrush}">
                <Border.BorderBrush>
                  <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
                </Border.BorderBrush>
              </Border>
            </Border>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="10,4,0,4"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="HoverBorder" Property="Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter Value="{DynamicResource SelectedBackgroundBrush}" TargetName="HoverBorder" Property="Background"/>
              <Setter TargetName="SelectedBorder" Property="Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ListBox}" TargetType="{x:Type ListBox}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Background" Value="{DynamicResource WhiteBrush}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource SolidBorderBrush}"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBox}">
          <Grid>
            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
            <ScrollViewer Margin="1" Focusable="False" Background="{TemplateBinding Background}">
              <StackPanel Margin="1" IsItemsHost="True"/>
            </ScrollViewer>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" Property="Background"/>
              <Setter Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" Property="BorderBrush"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="True">
              <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ListBoxItem}" TargetType="{x:Type ListBoxItem}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="OverridesDefaultStyle" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Grid SnapsToDevicePixels="True" Margin="0,1">
            <Border x:Name="SelectedBorder" Opacity="0" BorderThickness="1" CornerRadius="2" BorderBrush="{DynamicResource SelectedListItemBorderBrush}">
              <Border BorderBrush="{DynamicResource ListItemSelectedInsiderBorderBrush}" BorderThickness="1" CornerRadius="1" Background="{DynamicResource ListItemSelectedBackgroundBrush}"/>
            </Border>
            <Border x:Name="HoverBorder" BorderThickness="1" BorderBrush="{DynamicResource MouseOverBorderBrush}" CornerRadius="3" Opacity="0">
              <Border BorderThickness="1" CornerRadius="2" Background="{DynamicResource ListItemHoverBrush}">
                <Border.BorderBrush>
                  <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
                </Border.BorderBrush>
              </Border>
            </Border>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="10,4,0,4"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="HoverBorder" Property="Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter Value="{DynamicResource SelectedBackgroundBrush}" TargetName="HoverBorder" Property="Background"/>
              <Setter TargetName="SelectedBorder" Property="Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NuclearScrollRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="Background" Value="#00FFFFFF"/>
    <Setter Property="BorderBrush" Value="#00FFFFFF"/>
    <Setter Property="IsTabStop" Value="False"/>
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid>
            <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NuclearRepeatButton" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
    <Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid>
            <Border x:Name="Border" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Background="{DynamicResource ScrollBarButtonBrush}"/>
            <Border x:Name="HoverBorder" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Background="{DynamicResource ScrollBarButtonHoverBrush}" Opacity="0"/>
            <Border x:Name="PressedBorder" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Background="{DynamicResource ScrollBarPressedBrush}" Opacity="0"/>
            <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="HoverBorder" Property="Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Value="{DynamicResource PressedBrush}" TargetName="Border" Property="Background"/>
              <Setter Value="{DynamicResource PressedBorderBrush}" TargetName="Border" Property="BorderBrush"/>
              <Setter TargetName="PressedBorder" Property="Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" Property="Background"/>
              <Setter Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" Property="BorderBrush"/>
              <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NuclearThumbStyle" TargetType="{x:Type Thumb}" BasedOn="{x:Null}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Grid x:Name="Grid" Margin="0,0,0,0">
            <Border BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1" Background="{DynamicResource ScrollBarButtonBrush}" CornerRadius="1"/>
            <Border x:Name="HoverBorder" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1" CornerRadius="1" Background="{DynamicResource ScrollBarButtonHoverBrush}" Opacity="0"/>
            <Border x:Name="PressedBorder" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1" CornerRadius="1" Background="{DynamicResource ScrollBarPressedBrush}" Opacity="0"/>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
              <Path Fill="{DynamicResource ScrollBarButtonBrush}" Stretch="Fill" Stroke="{DynamicResource ScrollBarButtonBorderBrush}" Margin="2.912,1,2.76,0" Data="M3.9115646,6.462585L12.244898,6.462585" Height="1"/>
              <Path Fill="{DynamicResource ScrollBarButtonBrush}" Stretch="Fill" Stroke="{DynamicResource ScrollBarButtonBorderBrush}" Margin="2.912,1,2.76,0" Data="M3.9115646,6.462585L12.244898,6.462585" Height="1"/>
              <Path Fill="{DynamicResource ScrollBarButtonBrush}" Stretch="Fill" Stroke="{DynamicResource ScrollBarButtonBorderBrush}" Margin="2.912,1,2.76,0" Data="M3.9115646,6.462585L12.244898,6.462585" Height="1"/>
              <Path Fill="{DynamicResource ScrollBarButtonBrush}" Stretch="Fill" Stroke="{DynamicResource ScrollBarButtonBorderBrush}" Margin="2.912,1,2.76,0" Data="M3.9115646,6.462585L12.244898,6.462585" Height="1"/>
            </StackPanel>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="HoverBorder" Property="Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False"/>
            <Trigger Property="IsDragging" Value="True">
              <Setter TargetName="PressedBorder" Property="Opacity" Value="1"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollBar}">
          <Grid x:Name="GridRoot" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
            <Grid.RowDefinitions>
              <RowDefinition MaxHeight="18"/>
              <RowDefinition Height="0.00001*"/>
              <RowDefinition MaxHeight="18"/>
            </Grid.RowDefinitions>
            <Border Grid.ColumnSpan="11" Grid.RowSpan="3" CornerRadius="1" BorderBrush="{x:Null}">
              <Border.Background>
                <LinearGradientBrush EndPoint="1.016,0.5" StartPoint="0.017,0.5">
                  <GradientStop Color="#FFEBEDEF" Offset="0"/>
                  <GradientStop Color="#FFD8DADC" Offset="1"/>
                  <GradientStop Color="#FFF4F4F4" Offset="0.047"/>
                  <GradientStop Color="WhiteSmoke" Offset="0.086"/>
                  <GradientStop Color="#FFFCFCFC" Offset="0.802"/>
                  <GradientStop Color="#FFEBEDEF" Offset="0.897"/>
                  <GradientStop Color="#FFF1F3F5" Offset="0.931"/>
                  <GradientStop Color="#FFE8EAEC" Offset="0.966"/>
                </LinearGradientBrush>
              </Border.Background>
            </Border>
            <RepeatButton x:Name="DecreaseRepeat" BorderThickness="1" Style="{DynamicResource NuclearRepeatButton}" Command="ScrollBar.LineUpCommand">
              <Grid>
                <Path x:Name="DecreaseArrow" StrokeThickness="1" Data="M0,4L8,4 4,0z">
                  <Path.Fill>
                    <SolidColorBrush Color="{DynamicResource BlackColor}"/>
                  </Path.Fill>
                </Path>
              </Grid>
            </RepeatButton>
            <Track x:Name="PART_Track" Grid.Row="1" Orientation="Vertical" IsDirectionReversed="True">
              <Track.Thumb>
                <Thumb Style="{DynamicResource NuclearThumbStyle}"/>
              </Track.Thumb>
              <Track.IncreaseRepeatButton>
                <RepeatButton x:Name="PageUp" Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="ScrollBar.PageDownCommand"/>
              </Track.IncreaseRepeatButton>
              <Track.DecreaseRepeatButton>
                <RepeatButton x:Name="PageDown" Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="ScrollBar.PageUpCommand"/>
              </Track.DecreaseRepeatButton>
            </Track>
            <RepeatButton x:Name="IncreaseRepeat" BorderThickness="1" Grid.Row="2" Style="{DynamicResource NuclearRepeatButton}" Command="ScrollBar.LineDownCommand">
              <Grid>
                <Path x:Name="IncreaseArrow" StrokeThickness="1" Data="M0,0L4,4 8,0z">
                  <Path.Fill>
                    <SolidColorBrush Color="{DynamicResource BlackColor}"/>
                  </Path.Fill>
                </Path>
              </Grid>
            </RepeatButton>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
              <Setter TargetName="GridRoot" Property="LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="-90"/>
                </Setter.Value>
              </Setter>
              <Setter TargetName="PART_Track" Property="Orientation" Value="Vertical"/>
              <Setter TargetName="DecreaseRepeat" Property="Command" Value="ScrollBar.LineLeftCommand"/>
              <Setter TargetName="IncreaseRepeat" Property="Command" Value="ScrollBar.LineRightCommand"/>
              <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand"/>
              <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ScrollViewer}" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <ScrollContentPresenter Grid.Column="0" Grid.Row="0" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"/>
            <ScrollBar x:Name="PART_HorizontalScrollBar" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Minimum="0" Maximum="{TemplateBinding ScrollableWidth}" AutomationProperties.AutomationId="HorizontalScrollBar" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
            <ScrollBar x:Name="PART_VerticalScrollBar" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" Minimum="0" Maximum="{TemplateBinding ScrollableHeight}" AutomationProperties.AutomationId="VerticalScrollBar" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="NormalBorderBrushExtSimple" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFD6D8D9" Offset="0"/>
    <GradientStop Color="#FFA1A2A4" Offset="1"/>
    <GradientStop Color="#FFCCCDCE" Offset="0.733"/>
    <GradientStop Color="#FFD7D8D9" Offset="0.254"/>
  </LinearGradientBrush>
  <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition/>
        <ColumnDefinition Width="20"/>
      </Grid.ColumnDefinitions>
      <Rectangle x:Name="Rectangle" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" RadiusX="3" RadiusY="3" Stroke="{DynamicResource NormalBorderBrushExtSimple}" Fill="{DynamicResource ComboBoxToggleBg}"/>
      <Rectangle x:Name="Rectangle_Copy" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" RadiusX="3" RadiusY="3" Margin="1" Fill="{x:Null}">
        <Rectangle.Stroke>
          <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
    </Rectangle.Stroke>
      </Rectangle>
      <Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{DynamicResource GlyphBrush}" Data="M0,0L4,4 8,0z"/>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter TargetName="Rectangle" Value="{DynamicResource ListItemHoverBrush}" Property="Fill"/>
      </Trigger>
      <Trigger Property="IsChecked" Value="true">
        <Setter TargetName="Rectangle" Value="{DynamicResource SelectedListItemBorderBrush}" Property="Stroke"/>
        <Setter TargetName="Rectangle" Value="{DynamicResource ListItemSelectedBackgroundBrush}" Property="Fill"/>
        <Setter TargetName="Rectangle_Copy" Value="{DynamicResource ListItemSelectedInsiderBorderBrush}" Property="Stroke"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Rectangle" Property="Fill"/>
        <Setter Value="{DynamicResource DisabledBorderBrush}" TargetName="Rectangle" Property="Stroke"/>
        <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Foreground"/>
        <Setter Value="{DynamicResource DisabledForegroundBrush}" TargetName="Arrow" Property="Fill"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
    <Grid>
      <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" Margin="0,2,0,0"/>
      <Border x:Name="border" BorderBrush="{DynamicResource TextBoxBorderHoverBrush}" BorderThickness="1" Opacity="0"/>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter TargetName="border" Property="Opacity" Value="1"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Height" Value="19.8"/>
    <Setter Property="Template" Value="{DynamicResource NuclearComboBox}"/>
  </Style>
  <LinearGradientBrush x:Key="PressedBorderBrush3" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFC2762B" Offset="0"/>
    <GradientStop Color="#FFC29E47" Offset="1"/>
    <GradientStop Color="#FFC28031" Offset="0.315"/>
    <GradientStop Color="#FFC29440" Offset="0.728"/>
    <GradientStop Color="#FFC29A44" Offset="0.853"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="PressedBrush3" EndPoint="0.5,1.021" StartPoint="0.5,0.031">
    <GradientStop Color="#FFFBD678" Offset="0"/>
    <GradientStop Color="#FFFEE287" Offset="1"/>
    <GradientStop Color="#FFFEE287" Offset="0.138"/>
    <GradientStop Color="#FFFFE48A" Offset="0.241"/>
    <GradientStop Color="#FFFFE48A" Offset="0.879"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="PressedBorderBrushInner3" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFF6C867" Offset="0"/>
    <GradientStop Color="#FFFAD77A" Offset="1"/>
    <GradientStop Color="#FFF8D172" Offset="0.323"/>
    <GradientStop Color="#FFF8D172" Offset="0.716"/>
    <GradientStop Color="#FFF6CC6C" Offset="0.866"/>
  </LinearGradientBrush>
  <ControlTemplate x:Key="EditableTextComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition/>
        <ColumnDefinition Width="16"/>
      </Grid.ColumnDefinitions>
      <Rectangle x:Name="Rectangle" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{DynamicResource TextBoxBorderBrush}">
        <Rectangle.Fill>
          <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
    </Rectangle.Fill>
      </Rectangle>
      <Rectangle x:Name="HoverRectangle" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{DynamicResource TextBoxBorderHoverBrush}" Opacity="0" Fill="{x:Null}"/>
      <Rectangle x:Name="ButtonHover" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{DynamicResource MouseOverBorderBrush}" Fill="{DynamicResource ComboBoxToggleBg}" Grid.Column="1" Opacity="0"/>
      <Rectangle x:Name="ButtonHoverInner" Grid.ColumnSpan="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="{DynamicResource ListItemHoverBrush}" Grid.Column="1" Margin="2" Opacity="0" Stroke="{x:Null}"/>
      <Rectangle x:Name="ButtonPressed" Grid.ColumnSpan="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{DynamicResource PressedBorderBrush3}" Fill="{DynamicResource ComboBoxToggleBg}" Opacity="0" Grid.Column="1"/>
      <Rectangle x:Name="ButtonPressednner" Grid.ColumnSpan="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{DynamicResource PressedBorderBrushInner3}" Fill="{DynamicResource PressedBrush3}" Grid.Column="1" Opacity="0" Margin="1"/>
      <Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{DynamicResource GlyphBrush}" Data="M0,0L4,4 8,0z"/>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter TargetName="HoverRectangle" Property="Opacity" Value="1"/>
        <Setter TargetName="ButtonHover" Property="Opacity" Value="1"/>
        <Setter TargetName="ButtonHoverInner" Property="Opacity" Value="1"/>
      </Trigger>
      <Trigger Property="IsChecked" Value="true">
        <Setter TargetName="ButtonPressed" Property="Opacity" Value="1"/>
        <Setter TargetName="ButtonPressednner" Property="Opacity" Value="1"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Rectangle" Property="Fill"/>
        <Setter Value="{DynamicResource DisabledBorderBrush}" TargetName="Rectangle" Property="Stroke"/>
        <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Foreground"/>
        <Setter Value="{DynamicResource DisabledForegroundBrush}" TargetName="Arrow" Property="Fill"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="NuclearComboBox" TargetType="{x:Type ComboBox}">
    <Grid>
      <ToggleButton x:Name="ToggleButton" Grid.Column="2" Template="{DynamicResource ComboBoxToggleButton}" Focusable="False" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
      <ContentPresenter x:Name="ContentSite" HorizontalAlignment="Left" Margin="10,2,20,2" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False"/>
      <TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" Template="{DynamicResource ComboBoxTextBox}" HorizontalAlignment="Stretch" Margin="0,0,16,0" VerticalAlignment="Stretch" Focusable="True" Background="#00FFFFFF" IsReadOnly="{TemplateBinding IsReadOnly}" Style="{x:Null}"/>
      <Popup x:Name="Popup" IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
        <Grid x:Name="DropDown" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" SnapsToDevicePixels="True">
          <Border x:Name="DropDownBorder" Background="{DynamicResource WhiteBrush}" BorderBrush="{DynamicResource NormalBorderBrushExtSimple}" BorderThickness="1" CornerRadius="2"/>
          <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True">
            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
          </ScrollViewer>
        </Grid>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="HasItems" Value="False">
        <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Foreground"/>
      </Trigger>
      <Trigger Property="IsGrouping" Value="True">
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
      </Trigger>
      <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
        <Setter TargetName="DropDownBorder" Property="Margin" Value="0,1,0,0"/>
      </Trigger>
      <Trigger Property="IsEditable" Value="True">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
        <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
        <Setter TargetName="ToggleButton" Value="{DynamicResource EditableTextComboBoxToggleButton}" Property="Template"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
          <Grid SnapsToDevicePixels="True" Margin="0,1">
            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
            <Border x:Name="HoverBorder" BorderThickness="1" BorderBrush="{DynamicResource MouseOverBorderBrush}" CornerRadius="3" Opacity="0">
              <Border BorderThickness="1" CornerRadius="2" Background="{DynamicResource ListItemHoverBrush}">
                <Border.BorderBrush>
                  <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
                </Border.BorderBrush>
              </Border>
            </Border>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="10,4,0,4"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
              <Setter TargetName="HoverBorder" Property="Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="TabControlTopBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="White" Offset="0"/>
    <GradientStop Color="#FFE5E9EE" Offset="1"/>
    <GradientStop Color="#FFFEFEFE" Offset="0.517"/>
    <GradientStop Color="#FFF4F5F6" Offset="0.759"/>
    <GradientStop Color="#FFEFF1F3" Offset="0.884"/>
    <GradientStop Color="#FFFCFCFC" Offset="0.642"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="TabControlBottomBrush" EndPoint="0.5,0" StartPoint="0.5,1">
    <GradientStop Color="White" Offset="0"/>
    <GradientStop Color="#FFE5E9EE" Offset="1"/>
    <GradientStop Color="#FFFEFEFE" Offset="0.517"/>
    <GradientStop Color="#FFF4F5F6" Offset="0.759"/>
    <GradientStop Color="#FFEFF1F3" Offset="0.884"/>
    <GradientStop Color="#FFFCFCFC" Offset="0.642"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="TabControlLeftBrush" EndPoint="0.979,0.5" StartPoint="-0.006,0.5">
    <GradientStop Color="White" Offset="0"/>
    <GradientStop Color="#FFE5E9EE" Offset="1"/>
    <GradientStop Color="#FFFEFEFE" Offset="0.517"/>
    <GradientStop Color="#FFF4F5F6" Offset="0.759"/>
    <GradientStop Color="#FFEFF1F3" Offset="0.884"/>
    <GradientStop Color="#FFFCFCFC" Offset="0.642"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="TabControlRightBrush" EndPoint="0.007,0.5" StartPoint="0.992,0.5">
    <GradientStop Color="White" Offset="0"/>
    <GradientStop Color="#FFE5E9EE" Offset="1"/>
    <GradientStop Color="#FFFEFEFE" Offset="0.517"/>
    <GradientStop Color="#FFF4F5F6" Offset="0.759"/>
    <GradientStop Color="#FFEFF1F3" Offset="0.884"/>
    <GradientStop Color="#FFFCFCFC" Offset="0.642"/>
  </LinearGradientBrush>
  <Style x:Key="{x:Type TabControl}" TargetType="{x:Type TabControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabControl}">
          <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="ColumnDefinition0"/>
              <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
              <RowDefinition x:Name="RowDefinition1" Height="*"/>
            </Grid.RowDefinitions>
            <Border x:Name="border" CornerRadius="2,2,0,0" Margin="3,0,0,-4" Panel.ZIndex="100" Background="{x:Null}">
              <TabPanel x:Name="HeaderPanel" IsItemsHost="True" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" RenderTransformOrigin="0.5,0.5" Width="Auto" Height="Auto">
                <TabPanel.LayoutTransform>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                    <SkewTransform AngleX="0" AngleY="0"/>
                    <RotateTransform Angle="0"/>
                    <TranslateTransform X="0" Y="0"/>
                  </TransformGroup>
                </TabPanel.LayoutTransform>
                <TabPanel.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                    <SkewTransform AngleX="0" AngleY="0"/>
                    <RotateTransform/>
                    <TranslateTransform X="0" Y="0"/>
                  </TransformGroup>
                </TabPanel.RenderTransform>
              </TabPanel>
            </Border>
            <Border x:Name="ContentPanel" Grid.Row="1" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1" CornerRadius="2" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="2" Background="{DynamicResource TabControlTopBrush}">
              <Grid>
                <ContentPresenter x:Name="PART_SelectedContentHost" Margin="4" ContentSource="SelectedContent"/>
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="TabStripPlacement" Value="Bottom">
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="RowDefinition0" Property="Height" Value="*"/>
              <Setter TargetName="RowDefinition1" Property="Height" Value="Auto"/>
              <Setter TargetName="border" Property="Grid.Row" Value="1"/>
              <Setter TargetName="ContentPanel" Property="CornerRadius" Value="2,2,0,0"/>
              <Setter TargetName="border" Property="CornerRadius" Value="0,0,2,2"/>
              <Setter TargetName="border" Property="Margin" Value="3,-3,0,0"/>
              <Setter TargetName="ContentPanel" Value="{DynamicResource TabControlBottomBrush}" Property="Background"/>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
              <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1"/>
              <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto"/>
              <Setter TargetName="ColumnDefinition1" Property="Width" Value="*"/>
              <Setter TargetName="RowDefinition0" Property="Height" Value="*"/>
              <Setter TargetName="RowDefinition1" Property="Height" Value="0"/>
              <Setter TargetName="border" Property="Grid.Column" Value="0"/>
              <Setter TargetName="border" Property="Margin" Value="0,0,-3,0"/>
              <Setter TargetName="ContentPanel" Property="Margin" Value="0,0,0,0"/>
              <Setter TargetName="border" Property="CornerRadius" Value="0,2,2,0"/>
              <Setter TargetName="ContentPanel" Property="CornerRadius" Value="0,2,2,0"/>
              <Setter TargetName="ContentPanel" Value="{DynamicResource TabControlLeftBrush}" Property="Background"/>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
              <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0"/>
              <Setter TargetName="ColumnDefinition0" Property="Width" Value="*"/>
              <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto"/>
              <Setter TargetName="RowDefinition0" Property="Height" Value="*"/>
              <Setter TargetName="RowDefinition1" Property="Height" Value="0"/>
              <Setter TargetName="border" Property="Grid.Column" Value="1"/>
              <Setter TargetName="ContentPanel" Property="CornerRadius" Value="2,0,0,2"/>
              <Setter TargetName="border" Property="CornerRadius" Value="0,2,2,0"/>
              <Setter TargetName="border" Property="Margin" Value="-3,0,0,-4"/>
              <Setter TargetName="ContentPanel" Value="{DynamicResource TabControlRightBrush}" Property="Background"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Effect">
      <Setter.Value>
        <DropShadowEffect Direction="0" ShadowDepth="1" BlurRadius="10" Opacity="0.1"/>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type TabItem}" TargetType="{x:Type TabItem}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabItem}">
          <Grid x:Name="grid" Margin="2,1,2,3">
            <Grid.LayoutTransform>
              <TransformGroup>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
                <SkewTransform AngleX="0" AngleY="0"/>
                <RotateTransform Angle="0"/>
                <TranslateTransform X="0" Y="0"/>
              </TransformGroup>
            </Grid.LayoutTransform>
            <Grid>
              <Border x:Name="SelectedBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" Opacity="0">
                <Border.BorderBrush>
                  <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Offset="0"/>
                    <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="1"/>
                    <GradientStop Offset="0.892"/>
                    <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0.909"/>
                  </LinearGradientBrush>
                </Border.BorderBrush>
                <Border x:Name="Border" BorderThickness="1,1,1,0" CornerRadius="1,1,0,0">
                  <Border.Background>
                    <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
                  </Border.Background>
                  <Border.BorderBrush>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                      <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0"/>
                      <GradientStop Offset="1" Color="White"/>
                      <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0.914"/>
                      <GradientStop Offset="0.927" Color="White"/>
                    </LinearGradientBrush>
                  </Border.BorderBrush>
                </Border>
              </Border>
              <Border x:Name="HoverBorder" Opacity="0" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1" CornerRadius="2,2,0,0">
                <Border BorderThickness="1,1,1,0" CornerRadius="1,1,0,0">
                  <Border.BorderBrush>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                      <GradientStop Color="White" Offset="0"/>
                      <GradientStop Offset="1"/>
                    </LinearGradientBrush>
                  </Border.BorderBrush>
                  <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                      <GradientStop Color="#19FFFFFF" Offset="0"/>
                      <GradientStop Color="White" Offset="1"/>
                      <GradientStop Color="#86FFFFFF" Offset="0.496"/>
                    </LinearGradientBrush>
                  </Border.Background>
                </Border>
              </Border>
              <ContentPresenter x:Name="ContentSite" HorizontalAlignment="Center" Margin="12,4" VerticalAlignment="Center" RecognizesAccessKey="True" ContentSource="Header"/>
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="TabStripPlacement" Value="Left">
              <Setter TargetName="grid" Property="LayoutTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                    <SkewTransform AngleX="0" AngleY="0"/>
                    <RotateTransform Angle="-90"/>
                    <TranslateTransform X="0" Y="0"/>
                  </TransformGroup>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
              <Setter TargetName="grid" Property="LayoutTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                    <SkewTransform AngleX="0" AngleY="0"/>
                    <RotateTransform Angle="90"/>
                    <TranslateTransform X="0" Y="0"/>
                  </TransformGroup>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Bottom">
              <Setter TargetName="ContentSite" Property="LayoutTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                    <SkewTransform AngleX="0" AngleY="0"/>
                    <RotateTransform Angle="180"/>
                    <TranslateTransform X="0" Y="0"/>
                  </TransformGroup>
                </Setter.Value>
              </Setter>
              <Setter TargetName="grid" Property="LayoutTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                    <SkewTransform AngleX="0" AngleY="0"/>
                    <RotateTransform Angle="180"/>
                    <TranslateTransform X="0" Y="0"/>
                  </TransformGroup>
                </Setter.Value>
              </Setter>
              <Setter TargetName="HoverBorder" Property="Margin" Value="0,0,0,1"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True"/>
                <Condition Property="IsSelected" Value="False"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="HoverBorder" Property="Opacity" Value="1"/>
            </MultiTrigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="Panel.ZIndex" Value="100"/>
              <Setter TargetName="SelectedBorder" Property="Opacity" Value="1"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition SourceName="grid" Property="IsMouseOver" Value="True"/>
                <Condition Property="IsSelected" Value="True"/>
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="BlueBorderBrush" Color="#FF1F48A1"/>
  <Color x:Key="BlueSpreadColor">#FF388BE4</Color>
  <SolidColorBrush x:Key="BlueSpreadBrush" Color="{StaticResource BlueSpreadColor}"/>
  <SolidColorBrush x:Key="GreenBorderBrush" Color="#FF186337"/>
  <SolidColorBrush x:Key="MagentaBorderBrush" Color="#FF571D70"/>
  <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="AllowDrop" Value="True"/>
    <Setter Property="Height" Value="19.8"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Template" Value="{DynamicResource NuclearTextBox}"/>
  </Style>
  <ControlTemplate x:Key="NuclearTextBox" TargetType="{x:Type TextBox}">
    <Grid>
      <Border x:Name="Border" BorderThickness="1" Padding="2" BorderBrush="{DynamicResource TextBoxBorderBrush}">
        <Border.Background>
          <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
        </Border.Background>
      </Border>
      <Border x:Name="HoverBorder" BorderThickness="1" Padding="2" Opacity="0" BorderBrush="{DynamicResource TextBoxBorderHoverBrush}" Background="{x:Null}"/>
      <Border x:Name="DisabledBorder" BorderThickness="1" Padding="2" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" BorderBrush="{DynamicResource TextBoxBorderHoverBrush}"/>
      <ScrollViewer x:Name="PART_ContentHost" Margin="0"/>
    </Grid>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True"/>
          <Condition Property="IsFocused" Value="False"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="HoverBorder" Property="Opacity" Value="1"/>
      </MultiTrigger>
      <Trigger Property="IsFocused" Value="True">
        <Setter TargetName="HoverBorder" Property="Opacity" Value="1"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" Property="BorderBrush"/>
        <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Foreground"/>
        <Setter TargetName="DisabledBorder" Property="Opacity" Value="0.5"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="RadioButtonFocusVisual" TargetType="{x:Type RadioButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle Margin="15,0,0,0" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="CheckBoxFocusVisual" TargetType="{x:Type CheckBox}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle Margin="15,0,0,0" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="CheckBoxBg" EndPoint="0.5,0.974" StartPoint="0.5,0.031">
    <GradientStop Color="#FFF2F3F5" Offset="0"/>
    <GradientStop Color="#FFF2F3F5" Offset="1"/>
    <GradientStop Color="#FFE8E9EB" Offset="0.197"/>
    <GradientStop Color="#FFE8E9EB" Offset="0.522"/>
    <GradientStop Color="#FFF0F1F2" Offset="0.723"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="CheckBoxInnerBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFB6B8BA" Offset="0"/>
    <GradientStop Color="#FFDEDFE0" Offset="1"/>
    <GradientStop Color="#FFB6B8BA" Offset="0.502"/>
    <GradientStop Color="#FFBEC0C2" Offset="0.518"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="CheckBoxInnerBorderHoverBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFFCAD5D" Offset="0"/>
    <GradientStop Color="#FFFEDEBE" Offset="1"/>
    <GradientStop Color="#FFFCAD5D" Offset="0.502"/>
    <GradientStop Color="#FFFCB771" Offset="0.518"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="CheckBoxHoverBorderBrush" Color="#FFD6A259"/>
  <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}"/>
    <Setter Property="Background" Value="{DynamicResource CheckBoxBg}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Template" Value="{DynamicResource NuclearCheckBox}"/>
  </Style>
  <ControlTemplate x:Key="NuclearCheckBox" TargetType="{x:Type CheckBox}">
    <BulletDecorator Background="#00FFFFFF">
      <BulletDecorator.Bullet>
        <Grid Width="13" Height="13">
          <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Border x:Name="border" BorderThickness="1" Margin="1" BorderBrush="{DynamicResource CheckBoxInnerBorderBrush}"/>
          </Border>
          <Path x:Name="CheckMark" Stretch="Fill" Stroke="{StaticResource GlyphBrush}" StrokeThickness="2" Width="Auto" Data="M-0.32455936,5.7168726L3.1785986,10.519821 10.465148,2.9112485" Margin="1.639,2.318,2.043,2.5"/>
          <Rectangle x:Name="ThreeState" Visibility="Hidden" Fill="{DynamicResource CheckBoxInnerBorderHoverBrush}" Stroke="#FFB36414" Margin="2,2,2,2" RadiusX="1" RadiusY="1"/>
        </Grid>
      </BulletDecorator.Bullet>
      <ContentPresenter RecognizesAccessKey="True" Margin="5,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Left"/>
    </BulletDecorator>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsChecked" Value="True"/>
          <Condition Property="IsThreeState" Value="True"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="ThreeState" Property="Visibility" Value="Visible"/>
        <Setter TargetName="CheckMark" Property="Visibility" Value="Hidden"/>
      </MultiTrigger>
      <Trigger Property="IsChecked" Value="false">
        <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Value="{DynamicResource MouseOverBrush}" TargetName="Border" Property="Background"/>
        <Setter TargetName="border" Value="{DynamicResource CheckBoxInnerBorderHoverBrush}" Property="BorderBrush"/>
        <Setter TargetName="Border" Value="{DynamicResource CheckBoxHoverBorderBrush}" Property="BorderBrush"/>
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Value="{DynamicResource PressedBrush}" TargetName="Border" Property="Background"/>
        <Setter TargetName="Border" Value="{DynamicResource GlyphBrush}" Property="BorderBrush"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" Property="Background"/>
        <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Foreground"/>
        <Setter Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" Property="BorderBrush"/>
        <Setter TargetName="border" Value="{DynamicResource DisabledBorderBrush}" Property="BorderBrush"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type RadioButton}" TargetType="{x:Type RadioButton}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="FocusVisualStyle" Value="{DynamicResource RadioButtonFocusVisual}"/>
    <Setter Property="Background" Value="{DynamicResource CheckBoxBg}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
    <Setter Property="Template" Value="{DynamicResource NuclearRadioButton}"/>
  </Style>
  <ControlTemplate x:Key="NuclearRadioButton" TargetType="{x:Type RadioButton}">
    <BulletDecorator Background="#00FFFFFF">
      <BulletDecorator.Bullet>
        <Grid Width="13" Height="13">
          <Ellipse x:Name="Ellipse_Border" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
          <Ellipse x:Name="InnerBorder" StrokeThickness="1" Stroke="{DynamicResource CheckBoxInnerBorderBrush}" Margin="2"/>
          <Ellipse x:Name="CheckMark" Margin="3" Stroke="#FFAA5B0B">
            <Ellipse.Fill>
              <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FFFFFFAF" Offset="0"/>
                <GradientStop Color="#FFFE9E45" Offset="1"/>
                <GradientStop Color="#FFFFE38A" Offset="0.325"/>
                <GradientStop Color="#FFFFBA61" Offset="0.663"/>
              </LinearGradientBrush>
          </Ellipse.Fill>
          </Ellipse>
        </Grid>
      </BulletDecorator.Bullet>
      <ContentPresenter RecognizesAccessKey="True" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
    </BulletDecorator>
    <ControlTemplate.Triggers>
      <Trigger Property="IsChecked" Value="false">
        <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Value="{DynamicResource MouseOverBrush}" TargetName="Ellipse_Border" Property="Fill"/>
        <Setter TargetName="InnerBorder" Value="{DynamicResource CheckBoxInnerBorderHoverBrush}" Property="Stroke"/>
        <Setter TargetName="Ellipse_Border" Value="{DynamicResource CheckBoxHoverBorderBrush}" Property="Stroke"/>
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Value="{DynamicResource PressedBrush}" TargetName="Ellipse_Border" Property="Fill"/>
        <Setter Value="{DynamicResource GlyphBrush}" TargetName="Ellipse_Border" Property="Stroke"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Ellipse_Border" Property="Fill"/>
        <Setter TargetName="Ellipse_Border" Property="Stroke" Value="#40000000"/>
        <Setter Property="Foreground" Value="#80000000"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <DropShadowBitmapEffect x:Key="PopupDropShadow" ShadowDepth="1.5" Softness="1" Opacity="0.2"/>
  <Style x:Key="{x:Type TreeView}" TargetType="{x:Type TreeView}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeView}">
          <Grid>
            <Border x:Name="Border" Background="{DynamicResource WindowBackgroundBrush}" BorderBrush="{DynamicResource SolidBorderBrush}" BorderThickness="1" CornerRadius="1">
              <ScrollViewer Focusable="False" Background="{TemplateBinding Background}" Padding="4" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="False">
                <ItemsPresenter/>
              </ScrollViewer>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NuclearTreeViewItemToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid Width="15" Height="13" Background="#00FFFFFF">
            <Path x:Name="IsExpandedPath" Visibility="Collapsed" HorizontalAlignment="Left" Margin="2.5,3.75,0,1.25" VerticalAlignment="Stretch" Fill="{DynamicResource GlyphBrush}" Data="M0,4L8,4 4,8z" RenderTransformOrigin="0.5,0.5">
              <Path.RenderTransform>
                <TransformGroup>
                  <ScaleTransform/>
                  <SkewTransform/>
                  <RotateTransform Angle="-46.576"/>
                  <TranslateTransform/>
                </TransformGroup>
              </Path.RenderTransform>
            </Path>
            <Path x:Name="IsExpandedPathHover" HorizontalAlignment="Left" Margin="2.5,3.75,0,1.25" VerticalAlignment="Stretch" Data="M0,4L8,4 4,8z" RenderTransformOrigin="0.5,0.5" Stroke="#FF27C7F7" Opacity="0" Fill="{x:Null}">
              <Path.RenderTransform>
                <TransformGroup>
                  <ScaleTransform/>
                  <SkewTransform/>
                  <RotateTransform Angle="-46.576"/>
                  <TranslateTransform/>
                </TransformGroup>
              </Path.RenderTransform>
            </Path>
            <Path x:Name="ExpandPath" HorizontalAlignment="Left" Margin="1,1,1,1" VerticalAlignment="Center" Data="M4,0L8,4 4,8z" Stroke="#FFA5A5A5" Fill="{x:Null}"/>
            <Path x:Name="ExpandPathHover" HorizontalAlignment="Left" Margin="1,1,0,1" VerticalAlignment="Center" Data="M4,0L8,4 4,8z" Stroke="#FF27C7F7" Opacity="0" Fill="{x:Null}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsChecked" Value="True"/>
                <Condition Property="IsMouseOver" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="IsExpandedPathHover" Property="Opacity" Value="1"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True"/>
                <Condition Property="IsChecked" Value="False"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="ExpandPathHover" Property="Opacity" Value="1"/>
            </MultiTrigger>
            <Trigger Property="IsChecked" Value="True">
              <Setter TargetName="IsExpandedPath" Property="Visibility" Value="Visible"/>
              <Setter TargetName="ExpandPath" Property="Visibility" Value="Collapsed"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
    <Setter Property="Background" Value="#00FFFFFF"/>
    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="Padding" Value="1,0,0,0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeViewItem}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition MinWidth="19" Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition/>
            </Grid.RowDefinitions>
            <ToggleButton x:Name="Expander" Style="{DynamicResource NuclearTreeViewItemToggleButton}" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
            <Border x:Name="Selection_Border" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
              <Grid>
                <Border x:Name="border" BorderBrush="{DynamicResource SelectedListItemBorderBrush}" BorderThickness="1" CornerRadius="2" Opacity="0">
                  <Border BorderBrush="{DynamicResource ListItemSelectedInsiderBorderBrush}" BorderThickness="1" Background="{DynamicResource ListItemSelectedBackgroundBrush}" CornerRadius="1"/>
                </Border>
                <Border x:Name="border1" BorderBrush="{DynamicResource MouseOverBorderBrush}" BorderThickness="1" CornerRadius="2" Opacity="0">
                  <Border BorderThickness="1" Background="{DynamicResource ListItemHoverBrush}" CornerRadius="1">
                    <Border.BorderBrush>
                      <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
                    </Border.BorderBrush>
                  </Border>
                </Border>
                <ContentPresenter x:Name="PART_Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" ContentSource="Header" Margin="2"/>
              </Grid>
            </Border>
            <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger SourceName="Selection_Border" Property="IsMouseOver" Value="True">
              <Setter TargetName="border1" Property="Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="IsExpanded" Value="False">
              <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="HasItems" Value="False">
              <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter TargetName="border" Property="Opacity" Value="1"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True"/>
                <Condition Property="IsSelectionActive" Value="False"/>
              </MultiTrigger.Conditions>
              <Setter Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Selection_Border" Property="Background"/>
              <Setter Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Foreground"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="ListBorder" Color="#828790"/>
  <LinearGradientBrush x:Key="NormalBrushExtSimple" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="White" Offset="0"/>
    <GradientStop Color="#FFEDEFF1" Offset="1"/>
    <GradientStop Color="#FFFDFDFD" Offset="0.332"/>
    <GradientStop Color="#FFFBFBFC" Offset="0.741"/>
    <GradientStop Color="#FFF6F7F8" Offset="0.875"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ShineFill" EndPoint="1,0.5" StartPoint="0,0.5">
    <GradientStop Color="#CC000000" Offset="0"/>
    <GradientStop Color="#CC000000" Offset="1"/>
    <GradientStop Color="#33C3C3C3" Offset="0.5"/>
    <GradientStop Color="#33C8C8C8" Offset="0.525"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ShineOpacity" EndPoint="1.012,0.887" StartPoint="0.012,0.887">
    <GradientStop Color="#E5000000" Offset="0"/>
    <GradientStop Color="#E5FFFFFF" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ShineBrush" EndPoint="0.465,0.869" StartPoint="0.465,0.143">
    <GradientStop Color="#CCFFFFFF" Offset="0"/>
    <GradientStop Color="#00FFFFFF" Offset="1"/>
    <GradientStop Color="#4CFFFFFF" Offset="0.56"/>
    <GradientStop Color="#99FFFFFF" Offset="0.555"/>
  </LinearGradientBrush>
  <Style x:Key="ButtonFocusVisual" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle SnapsToDevicePixels="True" Margin="2" Stroke="#FF000000" StrokeDashArray="1 2" StrokeThickness="1"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#F3F3F3" Offset="0"/>
    <GradientStop Color="#EBEBEB" Offset="0.5"/>
    <GradientStop Color="#DDDDDD" Offset="0.5"/>
    <GradientStop Color="#CDCDCD" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
  <Color x:Key="WhiteSpreadColor">#FFFFFFFF</Color>
  <SolidColorBrush x:Key="WhiteSpreadBrush" Color="{StaticResource WhiteSpreadColor}"/>
  <SolidColorBrush x:Key="WhiteBorderBrush" Color="{StaticResource WhiteSpreadColor}"/>
  <LinearGradientBrush x:Key="BlueGlassBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FF2E6CC0" Offset="0"/>
    <GradientStop Color="{StaticResource BlueSpreadColor}" Offset="1"/>
    <GradientStop Color="#FF2962B5" Offset="0.043"/>
    <GradientStop Color="#FF245DAF" Offset="0.091"/>
    <GradientStop Color="#FF265DB1" Offset="0.211"/>
    <GradientStop Color="#FF225CAF" Offset="0.341"/>
    <GradientStop Color="#FF225BB1" Offset="0.414"/>
    <GradientStop Color="#FF255DBB" Offset="0.573"/>
    <GradientStop Color="#FF2A61C5" Offset="0.638"/>
    <GradientStop Color="#FF2F66CB" Offset="0.685"/>
    <GradientStop Color="#FF2F6BD0" Offset="0.75"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="BlueUpperGlowBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FF4683E3" Offset="0"/>
    <GradientStop Color="#003167C1" Offset="0.543"/>
    <GradientStop Color="#FF407BDA" Offset="0.056"/>
    <GradientStop Color="#FF3D76D4" Offset="0.112"/>
    <GradientStop Color="#FF3971CD" Offset="0.168"/>
    <GradientStop Color="#FF356CC7" Offset="0.228"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="BlueInnerWhiteBrush" Color="#FF549FF1"/>
  <RadialGradientBrush x:Key="BlueBottomGlowBrush" Center="0.501,0.99" GradientOrigin="0.501,0.99">
    <GradientStop Color="#FF68AAEF" Offset="0"/>
    <GradientStop Color="#004684D4" Offset="0.974"/>
    <GradientStop Color="#FF61A1EB" Offset="0.073"/>
    <GradientStop Color="#FF5797E2" Offset="0.151"/>
    <GradientStop Color="#FF4E8CDC" Offset="0.237"/>
  </RadialGradientBrush>
  <Style x:Key="NuclearBlueButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
    <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}"/>
    <Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
    <Setter Property="Foreground" Value="#FFFFFFFF"/>
    <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <ControlTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BottomGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.8"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="UpperGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BottomGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="UpperGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.6"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.5"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedGlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedGlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </ControlTemplate.Resources>
          <Grid x:Name="Grid">
            <Border x:Name="BaseBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="{DynamicResource BlueBorderBrush}" Background="{x:Null}"/>
            <Border x:Name="GlassBorder" Margin="1" CornerRadius="2" Background="{DynamicResource BlueGlassBrush}" BorderBrush="{x:Null}"/>
            <Border x:Name="UpperGlowBorder" BorderThickness="1" CornerRadius="2" Visibility="Visible" Opacity="0.6" Background="{DynamicResource BlueUpperGlowBrush}" BorderBrush="{x:Null}"/>
            <Border x:Name="InnerWhiteBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource BlueInnerWhiteBrush}" Margin="1" Opacity="0.5"/>
            <Border x:Name="BottomGlowBorder" Margin="1" Opacity="0" CornerRadius="2" Background="{DynamicResource BlueBottomGlowBrush}" BorderBrush="{x:Null}"/>
            <Border x:Name="PressedGlassBorder" Margin="1" CornerRadius="2" Opacity="0" BorderBrush="{x:Null}">
              <Border.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                  <GradientStop Color="#FF2E6CC0" Offset="0"/>
                  <GradientStop Color="#FF388BE4" Offset="1"/>
                  <GradientStop Color="#FF2962B5" Offset="0.043"/>
                  <GradientStop Color="#FF245DAF" Offset="0.091"/>
                  <GradientStop Color="#FF265DB1" Offset="0.211"/>
                  <GradientStop Color="#FF225CAF" Offset="0.341"/>
                  <GradientStop Color="#FF225BB1" Offset="0.414"/>
                  <GradientStop Color="#FF255DBB" Offset="0.573"/>
                  <GradientStop Color="#FF2A61C5" Offset="0.638"/>
                  <GradientStop Color="#FF2F66CB" Offset="0.685"/>
                  <GradientStop Color="{StaticResource BlueSpreadColor}" Offset="0.737"/>
                </LinearGradientBrush>
              </Border.Background>
            </Border>
            <Border x:Name="DisabledBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="{DynamicResource DisabledBorderBrush}" Background="#E5EEEEEE" Opacity="0"/>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsDefault" Value="True"/>
            <Trigger Property="IsKeyboardFocused" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}"/>
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}"/>
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="True"/>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource DisabledBackgroundBrush}" TargetName="BaseBorder" Property="Background"/>
              <Setter Value="{DynamicResource DisabledBorderBrush}" TargetName="BaseBorder" Property="BorderBrush"/>
              <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Foreground"/>
              <Setter TargetName="DisabledBorder" Property="Opacity" Value="1"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Color x:Key="GreenSpreadColor">#FF58BC27</Color>
  <SolidColorBrush x:Key="GreenSpreadBrush" Color="{StaticResource GreenSpreadColor}"/>
  <LinearGradientBrush x:Key="GreenGlassBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FF378E29" Offset="0"/>
    <GradientStop Color="{StaticResource GreenSpreadColor}" Offset="1"/>
    <GradientStop Color="#FF2E822A" Offset="0.043"/>
    <GradientStop Color="#FF307E27" Offset="0.091"/>
    <GradientStop Color="#FF327E24" Offset="0.211"/>
    <GradientStop Color="#FF367F21" Offset="0.341"/>
    <GradientStop Color="#FF307E26" Offset="0.414"/>
    <GradientStop Color="#FF368429" Offset="0.573"/>
    <GradientStop Color="#FF37882C" Offset="0.638"/>
    <GradientStop Color="#FF3D9030" Offset="0.685"/>
    <GradientStop Color="#FF3E9531" Offset="0.737"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="GreenUpperGlowBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FF479733" Offset="0"/>
    <GradientStop Color="#0035812D" Offset="0.543"/>
    <GradientStop Color="#FF419031" Offset="0.052"/>
    <GradientStop Color="#FF3E8D2F" Offset="0.112"/>
    <GradientStop Color="#FF34862D" Offset="0.168"/>
    <GradientStop Color="#FF2F822B" Offset="0.228"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="GreenInnerWhiteBrush" Color="#FF67BC47"/>
  <RadialGradientBrush x:Key="GreenBottomGlowBrush" Center="0.501,0.99" GradientOrigin="0.501,0.99">
    <GradientStop Color="#FF89D667" Offset="0"/>
    <GradientStop Color="#00499940" Offset="0.974"/>
    <GradientStop Color="#FF7FCB62" Offset="0.073"/>
    <GradientStop Color="#FF73BF5A" Offset="0.151"/>
    <GradientStop Color="#FF69B553" Offset="0.233"/>
  </RadialGradientBrush>
  <Style x:Key="NuclearGreenButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
    <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}"/>
    <Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
    <Setter Property="Foreground" Value="#FFFFFFFF"/>
    <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <ControlTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BottomGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.8"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="UpperGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BottomGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="UpperGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.6"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.5"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedGlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedGlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </ControlTemplate.Resources>
          <Grid x:Name="Grid">
            <Border x:Name="BaseBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="{DynamicResource GreenBorderBrush}" Background="{x:Null}"/>
            <Border x:Name="GlassBorder" Margin="1" CornerRadius="2" Background="{DynamicResource GreenGlassBrush}" BorderBrush="{x:Null}"/>
            <Border x:Name="UpperGlowBorder" Margin="1" Opacity="0.6" Visibility="Visible" CornerRadius="2" Background="{DynamicResource GreenUpperGlowBrush}" BorderBrush="{x:Null}"/>
            <Border x:Name="InnerWhiteBorder" BorderThickness="1,1,1,0" CornerRadius="1,1,0,0" BorderBrush="{DynamicResource GreenInnerWhiteBrush}" Margin="1" Opacity="0.5"/>
            <Border x:Name="BottomGlowBorder" Margin="1" Opacity="0" CornerRadius="2" Background="{DynamicResource GreenBottomGlowBrush}" BorderBrush="{x:Null}"/>
            <Border x:Name="PressedGlassBorder" Margin="1" CornerRadius="2" Opacity="0" BorderBrush="{x:Null}">
              <Border.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                  <GradientStop Color="#FF378E29" Offset="0"/>
                  <GradientStop Color="#FF58BC27" Offset="1"/>
                  <GradientStop Color="#FF2E822A" Offset="0.043"/>
                  <GradientStop Color="#FF307E27" Offset="0.091"/>
                  <GradientStop Color="#FF327E24" Offset="0.211"/>
                  <GradientStop Color="#FF367F21" Offset="0.341"/>
                  <GradientStop Color="#FF307E26" Offset="0.414"/>
                  <GradientStop Color="#FF368429" Offset="0.573"/>
                  <GradientStop Color="#FF37882C" Offset="0.638"/>
                  <GradientStop Color="#FF3D9030" Offset="0.685"/>
                  <GradientStop Color="#FF3E9531" Offset="0.737"/>
                </LinearGradientBrush>
              </Border.Background>
            </Border>
            <Border x:Name="DisabledBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="{DynamicResource DisabledBorderBrush}" Background="#E5EEEEEE" Opacity="0"/>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsDefault" Value="True">
              <Setter TargetName="BaseBorder" Value="{DynamicResource FocusedBrush}" Property="Background"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}"/>
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}"/>
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="True"/>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Foreground"/>
              <Setter TargetName="DisabledBorder" Property="Opacity" Value="1"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="BlueTabItem" TargetType="{x:Type TabItem}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabItem}">
          <ControlTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="SelectedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.3"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BaseBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SelectedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BaseBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </ControlTemplate.Resources>
          <Grid x:Name="grid" Margin="2,1,2,3">
            <Grid.LayoutTransform>
              <TransformGroup>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
                <SkewTransform AngleX="0" AngleY="0"/>
                <RotateTransform Angle="0"/>
                <TranslateTransform X="0" Y="0"/>
              </TransformGroup>
            </Grid.LayoutTransform>
            <Grid>
              <Border x:Name="BaseBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource BlueBorderBrush}" Opacity="0" Background="{x:Null}"/>
              <Border x:Name="GlassBorder" Margin="1,1,1,0" CornerRadius="2,2,0,0" Background="{DynamicResource BlueGlassBrush}" Opacity="0" BorderBrush="{x:Null}"/>
              <Border x:Name="UpperGlowBorder" BorderThickness="1,1,1,0" CornerRadius="2" Visibility="Visible" Opacity="0" Background="{DynamicResource BlueUpperGlowBrush}" BorderBrush="{x:Null}"/>
              <Border x:Name="InnerWhiteBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource BlueInnerWhiteBrush}" Margin="1,1,1,0" Opacity="0"/>
              <Border x:Name="BottomGlowBorder" Margin="1,1,1,0" Opacity="0" CornerRadius="2" Background="{DynamicResource BlueBottomGlowBrush}" BorderBrush="{x:Null}"/>
              <Border x:Name="HoverBorder" Opacity="0" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" Margin="0,0,0,1">
                <Border BorderThickness="1,1,1,0" CornerRadius="1,1,0,0">
                  <Border.BorderBrush>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                      <GradientStop Color="White" Offset="0"/>
                      <GradientStop Offset="1"/>
                    </LinearGradientBrush>
                  </Border.BorderBrush>
                  <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                      <GradientStop Color="#19FFFFFF" Offset="0"/>
                      <GradientStop Color="White" Offset="1"/>
                      <GradientStop Color="#86FFFFFF" Offset="0.496"/>
                    </LinearGradientBrush>
                  </Border.Background>
                </Border>
              </Border>
              <Grid x:Name="LeftOrientation" Margin="0,0,-1,0"/>
              <Grid x:Name="RightOrientation" Margin="0,0,-1,0"/>
              <ContentPresenter x:Name="ContentSite" HorizontalAlignment="Center" Margin="12,4" VerticalAlignment="Center" Content="{TemplateBinding Header}" ContentSource="Header" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderTemplate}" RecognizesAccessKey="True"/>
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True"/>
                <Condition Property="TabStripPlacement" Value="Left"/>
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True"/>
                <Condition Property="TabStripPlacement" Value="Right"/>
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="TabStripPlacement" Value="Left">
              <Setter TargetName="grid" Property="LayoutTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                    <SkewTransform AngleX="0" AngleY="0"/>
                    <RotateTransform Angle="0"/>
                    <TranslateTransform X="0" Y="0"/>
                  </TransformGroup>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right"/>
            <Trigger Property="TabStripPlacement" Value="Bottom">
              <Setter TargetName="ContentSite" Property="LayoutTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                    <SkewTransform AngleX="0" AngleY="0"/>
                    <RotateTransform Angle="180"/>
                    <TranslateTransform X="0" Y="0"/>
                  </TransformGroup>
                </Setter.Value>
              </Setter>
              <Setter TargetName="grid" Property="LayoutTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                    <SkewTransform AngleX="0" AngleY="0"/>
                    <RotateTransform Angle="180"/>
                    <TranslateTransform X="0" Y="0"/>
                  </TransformGroup>
                </Setter.Value>
              </Setter>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True"/>
                <Condition Property="IsSelected" Value="False"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="HoverBorder" Property="Opacity" Value="1"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True"/>
                <Condition Property="TabStripPlacement" Value="Left"/>
                <Condition Property="IsSelected" Value="False"/>
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True"/>
                <Condition Property="TabStripPlacement" Value="Right"/>
                <Condition Property="IsSelected" Value="False"/>
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="Panel.ZIndex" Value="100"/>
              <Setter TargetName="BaseBorder" Property="Opacity" Value="1"/>
              <Setter TargetName="GlassBorder" Property="Opacity" Value="1"/>
              <Setter TargetName="InnerWhiteBorder" Property="Opacity" Value="0.3"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition SourceName="grid" Property="IsMouseOver" Value="True"/>
                <Condition Property="IsSelected" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="BottomGlowBorder" Property="Opacity" Value="0.8"/>
              <Setter TargetName="InnerWhiteBorder" Property="Opacity" Value="1"/>
              <Setter TargetName="UpperGlowBorder" Property="Opacity" Value="1"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
    <Style.Triggers>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="GreenTabItem" TargetType="{x:Type TabItem}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabItem}">
          <ControlTemplate.Resources>
            <ResourceDictionary>
              <Storyboard x:Key="SelectedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.3"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BaseBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SelectedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BaseBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </ResourceDictionary>
          </ControlTemplate.Resources>
          <Grid x:Name="grid" Margin="2,1,2,3">
            <Grid.LayoutTransform>
              <TransformGroup>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
                <SkewTransform AngleX="0" AngleY="0"/>
                <RotateTransform Angle="0"/>
                <TranslateTransform X="0" Y="0"/>
              </TransformGroup>
            </Grid.LayoutTransform>
            <Grid>
              <Border x:Name="BaseBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource GreenBorderBrush}" Opacity="0" Background="{x:Null}"/>
              <Border x:Name="GlassBorder" Margin="1,1,1,0" CornerRadius="2,2,0,0" Background="{DynamicResource GreenGlassBrush}" Opacity="0" BorderBrush="{x:Null}"/>
              <Border x:Name="UpperGlowBorder" BorderThickness="1,1,1,0" CornerRadius="2" Visibility="Visible" Opacity="0" Background="{DynamicResource GreenUpperGlowBrush}" BorderBrush="{x:Null}"/>
              <Border x:Name="InnerWhiteBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource GreenInnerWhiteBrush}" Margin="1,1,1,0" Opacity="0"/>
              <Border x:Name="BottomGlowBorder" Margin="1,1,1,0" Opacity="0" CornerRadius="2" Background="{DynamicResource GreenBottomGlowBrush}" BorderBrush="{x:Null}"/>
              <Border x:Name="HoverBorder" Opacity="0" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" Margin="0,0,0,1">
                <Border BorderThickness="1,1,1,0" CornerRadius="1,1,0,0">
                  <Border.BorderBrush>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                      <GradientStop Color="White" Offset="0"/>
                      <GradientStop Offset="1"/>
                    </LinearGradientBrush>
                  </Border.BorderBrush>
                  <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                      <GradientStop Color="#19FFFFFF" Offset="0"/>
                      <GradientStop Color="White" Offset="1"/>
                      <GradientStop Color="#86FFFFFF" Offset="0.496"/>
                    </LinearGradientBrush>
                  </Border.Background>
                </Border>
              </Border>
              <Grid x:Name="LeftOrientation" Margin="0,0,-1,0"/>
              <Grid x:Name="RightOrientation" Margin="0,0,-1,0"/>
              <ContentPresenter x:Name="ContentSite" HorizontalAlignment="Center" Margin="12,4" VerticalAlignment="Center" Content="{TemplateBinding Header}" ContentSource="Header" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderTemplate}" RecognizesAccessKey="True"/>
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True"/>
                <Condition Property="TabStripPlacement" Value="Left"/>
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True"/>
                <Condition Property="TabStripPlacement" Value="Right"/>
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="TabStripPlacement" Value="Left">
              <Setter TargetName="grid" Property="LayoutTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                    <SkewTransform AngleX="0" AngleY="0"/>
                    <RotateTransform Angle="0"/>
                    <TranslateTransform X="0" Y="0"/>
                  </TransformGroup>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
              <Setter TargetName="grid" Property="LayoutTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                    <SkewTransform AngleX="0" AngleY="0"/>
                    <RotateTransform Angle="0"/>
                    <TranslateTransform X="0" Y="0"/>
                  </TransformGroup>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Bottom">
              <Setter TargetName="ContentSite" Property="LayoutTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                    <SkewTransform AngleX="0" AngleY="0"/>
                    <RotateTransform Angle="180"/>
                    <TranslateTransform X="0" Y="0"/>
                  </TransformGroup>
                </Setter.Value>
              </Setter>
              <Setter TargetName="grid" Property="LayoutTransform">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                    <SkewTransform AngleX="0" AngleY="0"/>
                    <RotateTransform Angle="180"/>
                    <TranslateTransform X="0" Y="0"/>
                  </TransformGroup>
                </Setter.Value>
              </Setter>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True"/>
                <Condition Property="IsSelected" Value="False"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="HoverBorder" Property="Opacity" Value="1"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True"/>
                <Condition Property="TabStripPlacement" Value="Left"/>
                <Condition Property="IsSelected" Value="False"/>
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True"/>
                <Condition Property="TabStripPlacement" Value="Right"/>
                <Condition Property="IsSelected" Value="False"/>
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="Panel.ZIndex" Value="100"/>
              <Setter TargetName="BaseBorder" Property="Opacity" Value="1"/>
              <Setter TargetName="GlassBorder" Property="Opacity" Value="1"/>
              <Setter TargetName="InnerWhiteBorder" Property="Opacity" Value="0.3"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition SourceName="grid" Property="IsMouseOver" Value="True"/>
                <Condition Property="IsSelected" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="BottomGlowBorder" Property="Opacity" Value="0.8"/>
              <Setter TargetName="InnerWhiteBorder" Property="Opacity" Value="1"/>
              <Setter TargetName="UpperGlowBorder" Property="Opacity" Value="1"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
    <Style.Triggers>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="BlueTabControl" TargetType="{x:Type TabControl}">
    <Setter Property="ItemContainerStyle" Value="{DynamicResource BlueTabItem}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabControl}">
          <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="ColumnDefinition0"/>
              <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
              <RowDefinition x:Name="RowDefinition1" Height="*"/>
            </Grid.RowDefinitions>
            <Border x:Name="border" CornerRadius="2,2,0,0" Margin="2,0,0,-4" Panel.ZIndex="100" Background="{x:Null}">
              <Grid>
                <Border x:Name="LeftOrientationBackground" Background="{DynamicResource SmartListBackgroundBrush}" Opacity="0" BorderBrush="{DynamicResource SmartListBorderBrush}" BorderThickness="1,1,0,1"/>
                <TabPanel x:Name="HeaderPanel" IsItemsHost="True" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" RenderTransformOrigin="0.5,0.5" Width="Auto" Height="Auto">
                  <TabPanel.LayoutTransform>
                    <TransformGroup>
                      <ScaleTransform ScaleX="1" ScaleY="1"/>
                      <SkewTransform AngleX="0" AngleY="0"/>
                      <RotateTransform Angle="0"/>
                      <TranslateTransform X="0" Y="0"/>
                    </TransformGroup>
                  </TabPanel.LayoutTransform>
                  <TabPanel.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform ScaleX="1" ScaleY="1"/>
                      <SkewTransform AngleX="0" AngleY="0"/>
                      <RotateTransform/>
                      <TranslateTransform X="0" Y="0"/>
                    </TransformGroup>
                  </TabPanel.RenderTransform>
                </TabPanel>
              </Grid>
            </Border>
            <Border x:Name="ContentPanel" Grid.Row="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="2" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="2" Background="{DynamicResource TabControlTopBrush}">
              <Grid>
                <Border x:Name="border1" Height="2" VerticalAlignment="Top" CornerRadius="1,1,0,0" Background="{TemplateBinding Background}"/>
                <ContentPresenter x:Name="PART_SelectedContentHost" Margin="4" ContentSource="SelectedContent"/>
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="TabStripPlacement" Value="Bottom">
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="RowDefinition0" Property="Height" Value="*"/>
              <Setter TargetName="RowDefinition1" Property="Height" Value="Auto"/>
              <Setter TargetName="border" Property="Grid.Row" Value="1"/>
              <Setter TargetName="border" Property="CornerRadius" Value="0,0,2,2"/>
              <Setter TargetName="border" Property="Margin" Value="2,-1,0,0"/>
              <Setter TargetName="border1" Property="VerticalAlignment" Value="Bottom"/>
              <Setter TargetName="border1" Property="CornerRadius" Value="0,0,1,1"/>
              <Setter TargetName="ContentPanel" Value="{DynamicResource TabControlBottomBrush}" Property="Background"/>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
              <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1"/>
              <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto"/>
              <Setter TargetName="ColumnDefinition1" Property="Width" Value="*"/>
              <Setter TargetName="RowDefinition0" Property="Height" Value="*"/>
              <Setter TargetName="RowDefinition1" Property="Height" Value="0"/>
              <Setter TargetName="border" Property="Grid.Column" Value="0"/>
              <Setter TargetName="border" Property="Margin" Value="0,0,0,0"/>
              <Setter TargetName="ContentPanel" Property="Margin" Value="0,0,0,0"/>
              <Setter TargetName="border" Property="CornerRadius" Value="0,2,2,0"/>
              <Setter TargetName="LeftOrientationBackground" Property="Opacity" Value="1"/>
              <Setter TargetName="ContentPanel" Value="{DynamicResource TabControlLeftBrush}" Property="Background"/>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
              <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0"/>
              <Setter TargetName="ColumnDefinition0" Property="Width" Value="*"/>
              <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto"/>
              <Setter TargetName="RowDefinition0" Property="Height" Value="*"/>
              <Setter TargetName="RowDefinition1" Property="Height" Value="0"/>
              <Setter TargetName="border" Property="Grid.Column" Value="1"/>
              <Setter TargetName="ContentPanel" Property="CornerRadius" Value="2,0,0,2"/>
              <Setter TargetName="border" Property="CornerRadius" Value="0,2,2,0"/>
              <Setter TargetName="border" Property="Margin" Value="0"/>
              <Setter TargetName="LeftOrientationBackground" Property="Opacity" Value="1"/>
              <Setter TargetName="ContentPanel" Value="{DynamicResource TabControlRightBrush}" Property="Background"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Effect">
      <Setter.Value>
        <DropShadowEffect Direction="0" ShadowDepth="1" BlurRadius="10" Opacity="0.2" Color="Black"/>
      </Setter.Value>
    </Setter>
    <Setter Property="Background">
      <Setter.Value>
        <SolidColorBrush Color="{DynamicResource BlueSpreadColor}"/>
      </Setter.Value>
    </Setter>
    <Setter Property="BorderBrush" Value="{DynamicResource BlueBorderBrush}"/>
  </Style>
  <Style x:Key="GreenTabControl" TargetType="{x:Type TabControl}">
    <Setter Property="ItemContainerStyle" Value="{DynamicResource GreenTabItem}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabControl}">
          <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="ColumnDefinition0"/>
              <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
              <RowDefinition x:Name="RowDefinition1" Height="*"/>
            </Grid.RowDefinitions>
            <Border x:Name="border" CornerRadius="2,2,0,0" Margin="2,0,0,-4" Panel.ZIndex="100" Background="{x:Null}">
              <Grid>
                <Border x:Name="LeftOrientationBackground" Background="{DynamicResource SmartListBackgroundBrush}" Opacity="0" BorderBrush="{DynamicResource SmartListBorderBrush}" BorderThickness="1,1,0,1"/>
                <TabPanel x:Name="HeaderPanel" IsItemsHost="True" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" RenderTransformOrigin="0.5,0.5" Width="Auto" Height="Auto">
                  <TabPanel.LayoutTransform>
                    <TransformGroup>
                      <ScaleTransform ScaleX="1" ScaleY="1"/>
                      <SkewTransform AngleX="0" AngleY="0"/>
                      <RotateTransform Angle="0"/>
                      <TranslateTransform X="0" Y="0"/>
                    </TransformGroup>
                  </TabPanel.LayoutTransform>
                  <TabPanel.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform ScaleX="1" ScaleY="1"/>
                      <SkewTransform AngleX="0" AngleY="0"/>
                      <RotateTransform/>
                      <TranslateTransform X="0" Y="0"/>
                    </TransformGroup>
                  </TabPanel.RenderTransform>
                </TabPanel>
              </Grid>
            </Border>
            <Border x:Name="ContentPanel" Grid.Row="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="2" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="2" Background="{DynamicResource TabControlTopBrush}">
              <Grid>
                <Border x:Name="border1" Height="2" VerticalAlignment="Top" CornerRadius="1,1,0,0" Background="{TemplateBinding Background}"/>
                <ContentPresenter x:Name="PART_SelectedContentHost" Margin="4" ContentSource="SelectedContent"/>
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="TabStripPlacement" Value="Bottom">
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="RowDefinition0" Property="Height" Value="*"/>
              <Setter TargetName="RowDefinition1" Property="Height" Value="Auto"/>
              <Setter TargetName="border" Property="Grid.Row" Value="1"/>
              <Setter TargetName="border" Property="CornerRadius" Value="0,0,2,2"/>
              <Setter TargetName="border" Property="Margin" Value="2,-1,0,0"/>
              <Setter TargetName="border1" Property="VerticalAlignment" Value="Bottom"/>
              <Setter TargetName="border1" Property="CornerRadius" Value="0,0,1,1"/>
              <Setter TargetName="ContentPanel" Value="{DynamicResource TabControlBottomBrush}" Property="Background"/>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
              <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1"/>
              <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto"/>
              <Setter TargetName="ColumnDefinition1" Property="Width" Value="*"/>
              <Setter TargetName="RowDefinition0" Property="Height" Value="*"/>
              <Setter TargetName="RowDefinition1" Property="Height" Value="0"/>
              <Setter TargetName="border" Property="Grid.Column" Value="0"/>
              <Setter TargetName="border" Property="Margin" Value="0,0,0,0"/>
              <Setter TargetName="ContentPanel" Property="Margin" Value="0,0,0,0"/>
              <Setter TargetName="border" Property="CornerRadius" Value="0,2,2,0"/>
              <Setter TargetName="LeftOrientationBackground" Property="Opacity" Value="1"/>
              <Setter TargetName="ContentPanel" Value="{DynamicResource TabControlLeftBrush}" Property="Background"/>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
              <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0"/>
              <Setter TargetName="ColumnDefinition0" Property="Width" Value="*"/>
              <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto"/>
              <Setter TargetName="RowDefinition0" Property="Height" Value="*"/>
              <Setter TargetName="RowDefinition1" Property="Height" Value="0"/>
              <Setter TargetName="border" Property="Grid.Column" Value="1"/>
              <Setter TargetName="ContentPanel" Property="CornerRadius" Value="2,0,0,2"/>
              <Setter TargetName="border" Property="CornerRadius" Value="0,2,2,0"/>
              <Setter TargetName="border" Property="Margin" Value="0"/>
              <Setter TargetName="LeftOrientationBackground" Property="Opacity" Value="1"/>
              <Setter TargetName="ContentPanel" Value="{DynamicResource TabControlRightBrush}" Property="Background"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Effect">
      <Setter.Value>
        <DropShadowEffect Direction="0" ShadowDepth="1" BlurRadius="10" Opacity="0.2" Color="Black"/>
      </Setter.Value>
    </Setter>
    <Setter Property="Background">
      <Setter.Value>
        <SolidColorBrush Color="{DynamicResource GreenSpreadColor}"/>
      </Setter.Value>
    </Setter>
    <Setter Property="BorderBrush" Value="{DynamicResource GreenBorderBrush}"/>
  </Style>
</ResourceDictionary>